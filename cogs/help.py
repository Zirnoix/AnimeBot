import discord
from discord.ext import commands
from discord import app_commands
from discord.ui import View, Button

class HelpMenu(View):
    def __init__(self, embeds):
        super().__init__(timeout=None)
        self.embeds = embeds
        self.current_page = 0
        self.message = None
        self.update_buttons()

    def update_buttons(self):
        self.clear_items()
        self.add_item(Button(label="‚¨ÖÔ∏è", style=discord.ButtonStyle.primary, custom_id="prev"))
        self.add_item(Button(label="‚û°Ô∏è", style=discord.ButtonStyle.primary, custom_id="next"))

    async def interaction_check(self, interaction: discord.Interaction) -> bool:
        return True

    @discord.ui.button(label="‚¨ÖÔ∏è", style=discord.ButtonStyle.primary, custom_id="prev")
    async def previous_page(self, interaction: discord.Interaction, button: Button):
        if self.current_page > 0:
            self.current_page -= 1
            await interaction.response.edit_message(embed=self.embeds[self.current_page], view=self)

    @discord.ui.button(label="‚û°Ô∏è", style=discord.ButtonStyle.primary, custom_id="next")
    async def next_page(self, interaction: discord.Interaction, button: Button):
        if self.current_page < len(self.embeds) - 1:
            self.current_page += 1
            await interaction.response.edit_message(embed=self.embeds[self.current_page], view=self)

class Help(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.command(name="help")
    async def help_command(self, ctx):
        pages = []

        # ‚ÑπÔ∏è Commandes G√©n√©rales
        embed1 = discord.Embed(title="üìò Aide - G√©n√©ral", description="Commandes d'information et basiques.", color=0x7289da)
        embed1.add_field(name="!help", value="Affiche ce menu d'aide.", inline=False)
        embed1.add_field(name="!ping", value="Test de latence du bot.", inline=False)
        embed1.add_field(name="!uptime", value="Temps de fonctionnement du bot.", inline=False)
        embed1.add_field(name="!botinfo", value="Informations sur le bot.", inline=False)
        embed1.add_field(name="!source", value="Lien vers le code source du bot.", inline=False)
        embed1.add_field(name="!todayinhistory", value="Anecdote anim√©e du jour dans l'histoire.", inline=False)
        embed1.set_footer(text="AnimeBot - Aide")

        # üë§ Commandes Anilist & Utilisateur
        embed2 = discord.Embed(title="üë§ Aide - Utilisateur & Anilist", description="Liens et stats de ton compte Anilist.", color=0x3498db)
        embed2.add_field(name="!linkanilist <pseudo>", value="Lie ton compte Anilist.", inline=False)
        embed2.add_field(name="!unlinkanilist", value="D√©-lie ton compte Anilist.", inline=False)
        embed2.add_field(name="!anilist", value="Affiche ton profil Anilist li√©.", inline=False)
        embed2.add_field(name="!stats", value="Statistiques d√©taill√©es de ton compte Anilist.", inline=False)
        embed2.set_footer(text="AnimeBot - Aide")

        # üì∫ Commandes Anim√©s & Notifications
        embed3 = discord.Embed(title="üì∫ Aide - Suivi & Planning", description="Syst√®me de suivi des √©pisodes et planning.", color=0x9b59b6)
        embed3.add_field(name="!next", value="Prochain √©pisode √† venir (bas√© sur le compte du bot).", inline=False)
        embed3.add_field(name="!monnext", value="Prochain √©pisode avec ton compte li√©.", inline=False)
        embed3.add_field(name="!planning", value="Planning hebdomadaire des sorties d‚Äôanimes.", inline=False)
        embed3.add_field(name="!setchannel", value="D√©finit le salon pour les alertes de sortie d‚Äô√©pisodes.", inline=False)
        embed3.set_footer(text="AnimeBot - Aide")

        # üéÆ Commandes Quiz & Classements
        embed4 = discord.Embed(title="üéÆ Aide - Quiz & Classements", description="Jeux, scores et classements mensuels.", color=0xe67e22)
        embed4.add_field(name="!animequiz", value="Devine l‚Äôanime via une image. +1 point par bonne r√©ponse.", inline=False)
        embed4.add_field(name="!animequizmulti <N>", value="Fait N quiz d‚Äôaffil√©e (entre 5 et 20). Gagne si +50% bonnes r√©ponses.", inline=False)
        embed4.add_field(name="!quiztop", value="Top 10 des meilleurs joueurs du mois.", inline=False)
        embed4.add_field(name="!myrank", value="Ton score et ton classement actuel.", inline=False)
        embed4.set_footer(text="AnimeBot - Aide")

        pages.extend([embed1, embed2, embed3, embed4])

        view = HelpMenu(pages)
        view.update_buttons()
        msg = await ctx.send(embed=pages[0], view=view)
        view.message = msg

async def setup(bot):
    await bot.add_cog(Help(bot))
